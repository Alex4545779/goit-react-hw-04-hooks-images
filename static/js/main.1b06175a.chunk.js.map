{"version":3,"sources":["apiServises/PixabayAPI.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["api","fetchImages","nextName","page","fetch","then","response","ok","json","Searchbar","onSubmit","useState","imageSearch","setImageSearch","className","type","onClick","event","preventDefault","trim","toast","placeholder","name","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","id","tags","smallImage","largeImage","onClickItem","alt","src","ImageGallery","images","toggleModal","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","map","webformatURL","largeImageURL","App","color","height","width","timeout","visible","Component","Button","loadMore","Modal","image","closeModal","addEventListener","handleEscClick","removeEventListener","e","code","tabIndex","setImages","status","setStatus","setPage","biggerImage","setBiggerImage","showModal","setShowModal","error","setError","getImages","useCallback","API","data","hits","catch","length","autoClose","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.1b06175a.chunk.js","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(nextName, page) {\n  return fetch(\n    `${BASE_URL}?q=${nextName}&page=${page}&key=22948262-953a9601ef8ec29dc611c2152&image_type=photo&orientation=horizontal&per_page=12\n`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\nconst api = { fetchImages };\nexport default api;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './Searchbar.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageSearch, setImageSearch] = useState('');\n\n  const handleNameChange = event => {\n    setImageSearch(event.currentTarget.value.toLowerCase());\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n\n    if (imageSearch.trim() === '') {\n      toast('Введите Ваш запрос');\n      return;\n    }\n    onSubmit(imageSearch);\n    setImageSearch('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={onSubmit} className=\"SearchForm\">\n        <button\n          type=\"submit\"\n          className=\"SearchForm-button\"\n          onClick={hendleSubmit}\n        >\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          // autocomplete=\"off\"\n          // autofocus\n          placeholder=\"Search images and photos\"\n          name=\"imageSearch\"\n          value={imageSearch}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\n// export default class Searchbar extends Component {\n//   // state = {\n//   //   imageSearch: '',\n//   // };\n//   handleNameChange = event => {\n//     this.setState({ imageSearch: event.currentTarget.value.toLowerCase() });\n//   };\n\n//   hendleSubmit = event => {\n//     event.preventDefault();\n//     if (this.state.imageSearch.trim() === '') {\n//       toast('Введите Ваш запрос');\n//       return;\n//     }\n//     this.props.onSubmit(this.state.imageSearch);\n//     this.setState({ imageSearch: '' });\n//   };\n//   render() {\n//     return (\n//       <header className=\"Searchbar\">\n//         <form onSubmit={this.props.onSubmit} className=\"SearchForm\">\n//           <button\n//             type=\"submit\"\n//             className=\"SearchForm-button\"\n//             onClick={this.hendleSubmit}\n//           >\n//             <span className=\"SearchForm-button-label\">Search</span>\n//           </button>\n\n//           <input\n//             className=\"SearchForm-input\"\n//             type=\"text\"\n//             // autocomplete=\"off\"\n//             // autofocus\n//             placeholder=\"Search images and photos\"\n//             name=\"imageSearch\"\n//             value={this.state.imageSearch}\n//             onChange={this.handleNameChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n  imageSearch: PropTypes.string,\n};\n","\nimport './ImageGalleryItem.css';\n\nexport default function ImageGalleryItem({ id, tags, smallImage, largeImage, onClickItem }) {\n  return (\n    <li key={id} className=\"ImageGalleryItem\">\n      <img\n        className=\"ImageGalleryItem-image\"\n        alt={tags}\n        src={smallImage}\n        data-source={largeImage}\n        onClick={()=>{onClickItem(largeImage)}}\n      />\n    </li>\n  );\n}\n\n","import { useEffect } from 'react';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nimport './ImageGallery.css';\n\n\nexport default function ImageGallery({ images,  toggleModal}) {\n\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  useEffect(() => {\n    scroll();\n  }, [images])\n\n\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, tags, webformatURL, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            tags={tags}\n            smallImage={webformatURL}\n            largeImage={largeImageURL}\n            onClickItem={()=>{toggleModal(largeImageURL)}}\n          />\n      ))}\n    </ul>\n  );\n}\n\n","import React, { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\n\nimport './Loader.css';\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <div className=\"loader-wrapper\">\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n          visible={true}\n        />\n      </div>\n    );\n  }\n}\n","import './Button.css';\n\nexport default function Button({ loadMore }) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={loadMore}>\n      Load more\n    </button>\n  );\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nexport default function Modal({ onClick, image, closeModal }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscClick);\n    return () => {\n      window.removeEventListener('keydown', handleEscClick);\n    };\n  });\n\n  const handleEscClick = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={onClick} tabIndex=\"0\">\n      <div className=\"Modal\">\n        <img src={image} alt={''} />\n      </div>\n    </div>\n  );\n}\n\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleEscClick);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleEscClick);\n//   }\n\n//   handleEscClick = e => {\n//     if (e.code === 'Escape'){\n//       this.props.closeModal()\n//     }\n//   };\n\n//   render() {\n//     const { onClick, image } = this.props;\n//     return (\n//       <div className=\"Overlay\"\n//            onClick={onClick}\n//            tabIndex=\"0\">\n//         <div className=\"Modal\">\n//           <img src={image} alt={image.tags} />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nModal.propTypes = {\n  onClick: PropTypes.func,\n  // image: string,\n  closeModal: PropTypes.func,\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport API from './apiServises/PixabayAPI';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Loader from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nimport './App.css';\n\n\nexport default function App() {\n  const [imageSearch, setImageSearch] = useState('');\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n  const [biggerImage, setBiggerImage] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState('');\n\n  const getImages = useCallback(\n  () => {\n    API.fetchImages(imageSearch, page)\n      .then(data => {\n        setImages(images => [...images, ...data.hits]);\n        setStatus('resolved');\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }\n  , [imageSearch, page])\n\n  const handleFormSubmit = name => {\n    if (name !== imageSearch) {\n      setImages([]);\n      setImageSearch(name);\n    }\n  };\n\n  const loadMore = () => {\n    if(imageSearch.length !== 0) {\n      setPage(page + 1);\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const toggleModal = largeImageURL => {\n    setShowModal(!showModal);\n    setBiggerImage(largeImageURL);\n  };\n\n  useEffect(() => {\n    if (imageSearch.length === 0) {\n      return;\n    } else {\n      getImages();\n    }\n  }, [imageSearch, page, getImages])\n\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit}/>\n      {status === 'pending' && <Loader />}\n      {status === 'idle' && <div className=\"message-wrapper\">\n        <p>Введите ваш запрос...</p></div>}\n      <ImageGallery\n        images={images}\n        toggleModal={largeImageURL => toggleModal(largeImageURL)}\n      />\n      {images.length !== 0 && <Button loadMore={loadMore} />}\n\n      {showModal && (\n        <Modal\n          onClick={() => {\n            toggleModal();\n          }}\n          image={biggerImage}\n          closeModal={closeModal}\n        />\n      )}\n      <ToastContainer autoClose={3000} />\n      {images.length === 0 && status === 'resolved' ? (\n        <div className=\"message-wrapper\">\n          <p>По запросу</p>\n          <p className=\"message-format\">{imageSearch}</p>\n          <p>ничего не найдено</p>\n        </div>\n      ) : null}\n      {status === 'rejected' && <div>{error}</div>}\n    </>\n  );\n}\n\n// class App extends Component {\n//   // constructor(props) {\n//   //   super(props);\n\n//   //   this.state = {\n//   //     imageSearch: '',\n//   //     images: [],\n//   //     status: 'idle',\n//   //     page: 1,\n//   //     buttonMore: false,\n//   //     biggerImage: '',\n//   //     showModal: false,\n//   //     error: '',\n//   //   };\n\n//   //   this.loadMore = this.loadMore.bind(this);\n//   //   this.closeModal = this.closeModal.bind(this);\n//   // }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevName = prevState.imageSearch;\n//     const nextName = this.state.imageSearch;\n//     const prevPage = prevState.page;\n//     const nextPage = this.state.page;\n\n//     if (prevName !== nextName) {\n//       this.setState({ status: 'pending', page: 1, images: [] });\n//       this.fetchImages(nextName, nextPage);\n//     }\n//     if (prevPage !== nextPage) {\n//       this.fetchImages(nextName, nextPage);\n//     }\n\n//   }\n\n//   fetchImages(nextName, nextPage) {\n//     API.fetchImages(nextName, nextPage).then(data => {\n//       API.fetchImages(nextName, nextPage)\n//         .then(data => {\n//           this.setState(prevState => {\n//             return {\n//               prevState,\n//               images: [...prevState.images, ...data.hits],\n//               status: 'resolved',\n//               imageSearch: nextName,\n//             };\n//           });\n\n//           if (this.prevPage !== nextPage) {\n//             window.scrollTo({\n//               top: document.documentElement.scrollHeight,\n//               behavior: 'smooth',\n//             });\n//           }\n//         })\n//         .catch(error => this.setState({ error, status: 'rejected' }));\n//     });\n//   }\n//   handleFormSubmit = name => {\n//     this.fetchImages(name, this.state.page);\n//   };\n\n//   toggleModal = largeImageURL => {\n//     this.setState(({ showModal, biggerImage }) => ({\n//       showModal: !showModal,\n//       biggerImage: largeImageURL,\n//     }));\n//   };\n\n//   closeModal = () => {\n//     this.setState(() => ({\n//       showModal: false,\n//     }));\n//   };\n\n//   loadMore() {\n//     this.setState(prevState => ({\n//       page: prevState.page + 1,\n//     }));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <Searchbar onSubmit={this.handleFormSubmit} />\n//         {this.state.status === 'idle' && <p>Введите ваш запрос...</p>}\n//         <ImageGallery\n//           images={this.state.images}\n//           toggleModal={largeImageURL => this.toggleModal(largeImageURL)}\n//         />\n//         {this.state.status === 'pending' && <Loader />}\n//         {this.state.images.length !== 0 && <Button loadMore={this.loadMore} />}\n\n//         {this.state.showModal && (\n//           <Modal\n//             onClick={() => {\n//               this.toggleModal();\n//             }}\n//             image={this.state.biggerImage}\n//             closeModal={this.closeModal}\n//           />\n//         )}\n//         <ToastContainer autoClose={3000} />\n//         {this.state.images.length === 0 && this.state.status === 'resolved' ? (\n//           <div>По запросу {this.state.imageSearch} ничего не найдено</div>\n//         ) : null}\n//         {this.state.status === 'rejected' && <div>{this.state.error}</div>}\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}